// <auto-generated />
using System;
using FinalGTAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinalGTAPI.Migrations
{
    [DbContext(typeof(FinalGTDbContext))]
    [Migration("20231105115018_v3")]
    partial class v3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinalGTAPI.Models.Quiz", b =>
                {
                    b.Property<int>("QuizID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("QuizID"));

                    b.Property<int>("Answer")
                        .HasColumnType("integer");

                    b.Property<string>("Option1")
                        .HasColumnType("text");

                    b.Property<string>("Option2")
                        .HasColumnType("text");

                    b.Property<string>("Option3")
                        .HasColumnType("text");

                    b.Property<string>("Option4")
                        .HasColumnType("text");

                    b.Property<string>("QuizContent")
                        .HasColumnType("text");

                    b.Property<int>("SubjectID")
                        .HasColumnType("integer");

                    b.HasKey("QuizID");

                    b.HasIndex("SubjectID");

                    b.ToTable("Quiz");
                });

            modelBuilder.Entity("FinalGTAPI.Models.Result", b =>
                {
                    b.Property<int>("ResultID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ResultID"));

                    b.Property<double>("AvgScore")
                        .HasColumnType("double precision");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("ResultID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Result");
                });

            modelBuilder.Entity("FinalGTAPI.Models.Subject", b =>
                {
                    b.Property<int>("SubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SubjectID"));

                    b.Property<int?>("ResultID")
                        .HasColumnType("integer");

                    b.Property<string>("SubjectName")
                        .HasColumnType("text");

                    b.HasKey("SubjectID");

                    b.HasIndex("ResultID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("FinalGTAPI.Models.TestResult", b =>
                {
                    b.Property<int>("TestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TestID"));

                    b.Property<DateTime>("DateTest")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SubjectID")
                        .HasColumnType("integer");

                    b.Property<double>("TestScore")
                        .HasColumnType("double precision");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("TestID");

                    b.HasIndex("SubjectID");

                    b.HasIndex("UserID");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("FinalGTAPI.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinalGTAPI.Models.Quiz", b =>
                {
                    b.HasOne("FinalGTAPI.Models.Subject", "Subject")
                        .WithMany("Quiz")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("FinalGTAPI.Models.Result", b =>
                {
                    b.HasOne("FinalGTAPI.Models.User", "User")
                        .WithOne("Result")
                        .HasForeignKey("FinalGTAPI.Models.Result", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalGTAPI.Models.Subject", b =>
                {
                    b.HasOne("FinalGTAPI.Models.Result", "Result")
                        .WithMany("Subjects")
                        .HasForeignKey("ResultID");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("FinalGTAPI.Models.TestResult", b =>
                {
                    b.HasOne("FinalGTAPI.Models.Subject", "Subject")
                        .WithMany("TestResults")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalGTAPI.Models.User", "User")
                        .WithMany("TestResults")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalGTAPI.Models.Result", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("FinalGTAPI.Models.Subject", b =>
                {
                    b.Navigation("Quiz");

                    b.Navigation("TestResults");
                });

            modelBuilder.Entity("FinalGTAPI.Models.User", b =>
                {
                    b.Navigation("Result");

                    b.Navigation("TestResults");
                });
#pragma warning restore 612, 618
        }
    }
}
